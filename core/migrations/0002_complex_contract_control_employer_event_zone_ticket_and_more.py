# Generated by Django 4.2.16 on 2025-06-01 23:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complex',
            fields=[
                ('complex_id', models.AutoField(primary_key=True, serialize=False)),
                ('complex_rigging', models.CharField(blank=True, max_length=100, null=True)),
                ('complex_address', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Комплекс',
                'verbose_name_plural': 'Комплексы',
                'db_table': 'complex',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_conditions', models.CharField(max_length=100)),
                ('contract_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('contract_term', models.DateField()),
            ],
            options={
                'verbose_name': 'Контракт',
                'verbose_name_plural': 'Контракты',
                'db_table': 'contract',
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Контроль',
                'verbose_name_plural': 'Контроли',
                'db_table': 'control',
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('employer_id', models.AutoField(primary_key=True, serialize=False)),
                ('employer_post', models.CharField(max_length=100)),
                ('employer_fio', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'db_table': 'employer',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_date_time', models.DateField()),
                ('event_format', models.CharField(max_length=100)),
                ('event_exhibits', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('zone_id', models.AutoField(primary_key=True, serialize=False)),
                ('zone_equipment', models.CharField(blank=True, max_length=100, null=True)),
                ('zone_square', models.SmallIntegerField(blank=True, null=True)),
                ('zone_type', models.CharField(choices=[('exhibition', 'Выставка'), ('conference', 'Конференция'), ('seminar', 'Семинар'), ('workshop', 'Мастер-класс'), ('other', 'Другое')], default='other', max_length=100, verbose_name='Тип зоны')),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.complex')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='core.contract')),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='zones_employer', to='core.employer')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='zones', to='core.event')),
            ],
            options={
                'verbose_name': 'Зона',
                'verbose_name_plural': 'Зоны',
                'db_table': 'zone',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.zone')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
                'db_table': 'ticket',
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('organizer_id', models.AutoField(primary_key=True, serialize=False)),
                ('organizer_affiliation', models.CharField(max_length=100)),
                ('organizer_fio', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Организатор',
                'verbose_name_plural': 'Организаторы',
                'db_table': 'organizer',
            },
        ),
        migrations.CreateModel(
            name='Man',
            fields=[
                ('man_id', models.AutoField(primary_key=True, serialize=False)),
                ('man_fio', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(default='visitor', max_length=20)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'man',
                'indexes': [models.Index(fields=['man_id'], name='man_pk')],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.organizer'),
        ),
        migrations.AddField(
            model_name='event',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='events', to='core.zone'),
        ),
        migrations.AddIndex(
            model_name='employer',
            index=models.Index(fields=['employer_id'], name='employer_pk'),
        ),
        migrations.AddField(
            model_name='control',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.employer'),
        ),
        migrations.AddField(
            model_name='control',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.event'),
        ),
        migrations.AddField(
            model_name='contract',
            name='organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='core.organizer'),
        ),
        migrations.AddIndex(
            model_name='complex',
            index=models.Index(fields=['complex_id'], name='complex_pk'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['zone_id'], name='zone_pk'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['employer_id'], name='work_fk'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['contract_id'], name='give_fk'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['complex_id'], name='consists_fk'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['event_id'], name='zone_event_fk'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['ticket_id'], name='ticket_pk'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['user_id'], name='buy_fk'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['zone_id', 'event_id'], name='based_fk'),
        ),
        migrations.AddIndex(
            model_name='organizer',
            index=models.Index(fields=['organizer_id'], name='organizer_pk'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['event_id'], name='event_pk'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['organizer_id'], name='plan_fk'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['zone_id'], name='depends_fk'),
        ),
        migrations.AddIndex(
            model_name='control',
            index=models.Index(fields=['event_id', 'employer_id'], name='control_pk'),
        ),
        migrations.AlterUniqueTogether(
            name='control',
            unique_together={('event', 'employer')},
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_id'], name='contract_pk'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['organizer_id'], name='slave_fk'),
        ),
    ]
